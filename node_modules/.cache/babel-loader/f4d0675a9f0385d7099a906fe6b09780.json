{"ast":null,"code":"var _jsxFileName = \"/home/groves/code/parking-pals/client/src/components/DrivewayResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport emptyDriveway from \"../assets/images/emptydriveway.png\";\nimport { Link } from \"react-router-dom\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport \"../css/DrivewayResults.css\";\nimport { setSearchCoordinates } from \"../actions/search-actions\";\nimport { dbDriveways } from \"../actions/db-driveways-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1Ijoid3N2b2JvZGEiLCJhIjoiY2txMTE1cGl2MDVmZzJvcXVibjViMGliaCJ9.13cxlIO8hYUtM1rQuvlbBw\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(32),\n      height: theme.spacing(32)\n    },\n    margin: \"auto\"\n  }\n}));\nexport default function DrivewayResults() {\n  _s();\n\n  const searchCoordinates = useSelector(state => state.searchCoordinates);\n  const dbDrivewayList = useSelector(state => state.dbDrivewayList);\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const getDrivewayData = async () => {\n    const response = await fetch(\"http://localhost:3001/api/driveways\", {\n      method: \"GET\"\n    });\n    const parsedData = await response.json();\n    dbDriveways(dispatch, parsedData);\n  };\n\n  const getLocation = async () => {\n    const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${search}.json?&access_token=pk.eyJ1Ijoid3N2b2JvZGEiLCJhIjoiY2txMTE1cGl2MDVmZzJvcXVibjViMGliaCJ9.13cxlIO8hYUtM1rQuvlbBw`, {\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    const json = await response.json();\n    const coords = json.features[0].center;\n    setSearchCoordinates(dispatch, coords);\n    console.log(coords);\n  };\n\n  const newLocation = () => {\n    if (searchCoordinates[1]) {\n      var map = new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [searchCoordinates[0], searchCoordinates[1]],\n        zoom: 14.5\n      });\n      let marker1 = new mapboxgl.Marker().setLngLat([searchCoordinates[0], searchCoordinates[1]]).addTo(map);\n    } else {\n      var map = new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [-84.4008875, 33.755288],\n        zoom: 14.5\n      });\n      let marker1 = new mapboxgl.Marker().setLngLat([-84.4008875, 33.755288]).addTo(map);\n    }\n\n    const allPoints = dbDrivewayList.filter(dlist => dlist.lat_long).map(point => ({\n      type: \"Feature\",\n      properties: {\n        description: `<strong>${point.address}</strong><p><Link to=\"/driveway/${point.id}\">\n\t\t\t\t\t\t<p>View More</p>\n\t\t\t\t\t</Link></p>`,\n        icon: \"veterinary-15\"\n      },\n      geometry: {\n        type: \"Point\",\n        coordinates: point.lat_long\n      }\n    }));\n    map.on(\"load\", function () {\n      map.addSource(\"places\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: allPoints\n        }\n      });\n      map.addLayer({\n        id: \"places\",\n        type: \"symbol\",\n        source: \"places\",\n        layout: {\n          \"icon-image\": \"{icon}\",\n          \"icon-allow-overlap\": true\n        }\n      });\n      map.on(\"click\", \"places\", function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var description = e.features[0].properties.description;\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML(description).addTo(map);\n      });\n      map.on(\"mouseenter\", \"places\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n      map.on(\"mouseleave\", \"places\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n    });\n  };\n\n  const submitNewLocation = e => {\n    e.preventDefault();\n    getLocation();\n    setSearch(\"\");\n  };\n\n  useEffect(() => {\n    newLocation();\n  }, [dbDrivewayList]);\n  useEffect(() => {\n    getDrivewayData();\n  }, [searchCoordinates]);\n  useEffect(() => {\n    newLocation();\n  }, [dbDrivewayList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driveway-results-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitNewLocation,\n        className: \"results-search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"landing-search-input\",\n          type: \"search\",\n          placeholder: \"Going somewhere else?\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"main-search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-and-map\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: dbDrivewayList.length > 1 ? dbDrivewayList.map(driveway => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"driveway-pic\",\n                src: emptyDriveway,\n                alt: \"driveway\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: driveway.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"$\", driveway.rate, \" / hour\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/driveway/${driveway.id}`,\n                children: \"More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No results!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 3\n  }, this);\n}\n\n_s(DrivewayResults, \"Y8xTGJkU7uk/ijDGJIqOBXNIH1A=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useStyles];\n});\n\n_c = DrivewayResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrivewayResults\");","map":{"version":3,"sources":["/home/groves/code/parking-pals/client/src/components/DrivewayResults.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","makeStyles","Paper","emptyDriveway","Link","mapboxgl","setSearchCoordinates","dbDriveways","accessToken","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","DrivewayResults","searchCoordinates","state","dbDrivewayList","search","setSearch","dispatch","classes","getDrivewayData","response","fetch","method","parsedData","json","getLocation","headers","Accept","coords","features","center","console","log","newLocation","map","Map","container","style","zoom","marker1","Marker","setLngLat","addTo","allPoints","filter","dlist","lat_long","point","type","properties","description","address","id","icon","geometry","coordinates","on","addSource","data","addLayer","source","layout","e","slice","Math","abs","lngLat","lng","Popup","setHTML","getCanvas","cursor","submitNewLocation","preventDefault","target","value","length","driveway","rate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport emptyDriveway from \"../assets/images/emptydriveway.png\";\nimport { Link } from \"react-router-dom\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"../css/DrivewayResults.css\";\nimport { setSearchCoordinates } from \"../actions/search-actions\";\nimport { dbDriveways } from \"../actions/db-driveways-actions\";\n\nmapboxgl.accessToken =\n\t\"pk.eyJ1Ijoid3N2b2JvZGEiLCJhIjoiY2txMTE1cGl2MDVmZzJvcXVibjViMGliaCJ9.13cxlIO8hYUtM1rQuvlbBw\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: theme.spacing(32),\n\t\t\theight: theme.spacing(32),\n\t\t},\n\t\tmargin: \"auto\",\n\t},\n}));\n\nexport default function DrivewayResults() {\n\tconst searchCoordinates = useSelector((state) => state.searchCoordinates);\n\tconst dbDrivewayList = useSelector((state) => state.dbDrivewayList);\n\tconst [search, setSearch] = useState(\"\");\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\n\tconst getDrivewayData = async () => {\n\t\tconst response = await fetch(\"http://localhost:3001/api/driveways\", {\n\t\t\tmethod: \"GET\",\n\t\t});\n\t\tconst parsedData = await response.json();\n\t\tdbDriveways(dispatch, parsedData);\n\t};\n\n\tconst getLocation = async () => {\n\t\tconst response = await fetch(\n\t\t\t`https://api.mapbox.com/geocoding/v5/mapbox.places/${search}.json?&access_token=pk.eyJ1Ijoid3N2b2JvZGEiLCJhIjoiY2txMTE1cGl2MDVmZzJvcXVibjViMGliaCJ9.13cxlIO8hYUtM1rQuvlbBw`,\n\t\t\t{\n\t\t\t\theaders: { Accept: \"application/json\" },\n\t\t\t}\n\t\t);\n\t\tconst json = await response.json();\n\t\tconst coords = json.features[0].center;\n\t\tsetSearchCoordinates(dispatch, coords);\n\t\tconsole.log(coords);\n\t};\n\n\tconst newLocation = () => {\n\t\tif (searchCoordinates[1]) {\n\t\t\tvar map = new mapboxgl.Map({\n\t\t\t\tcontainer: \"map\",\n\t\t\t\tstyle: \"mapbox://styles/mapbox/streets-v11\",\n\t\t\t\tcenter: [searchCoordinates[0], searchCoordinates[1]],\n\t\t\t\tzoom: 14.5,\n\t\t\t});\n\t\t\tlet marker1 = new mapboxgl.Marker()\n\t\t\t\t.setLngLat([searchCoordinates[0], searchCoordinates[1]])\n\t\t\t\t.addTo(map);\n\t\t} else {\n\t\t\tvar map = new mapboxgl.Map({\n\t\t\t\tcontainer: \"map\",\n\t\t\t\tstyle: \"mapbox://styles/mapbox/streets-v11\",\n\t\t\t\tcenter: [-84.4008875, 33.755288],\n\t\t\t\tzoom: 14.5,\n\t\t\t});\n\t\t\tlet marker1 = new mapboxgl.Marker()\n\t\t\t\t.setLngLat([-84.4008875, 33.755288])\n\t\t\t\t.addTo(map);\n\t\t}\n\t\tconst allPoints = dbDrivewayList\n\t\t\t.filter((dlist) => dlist.lat_long)\n\t\t\t.map((point) => ({\n\t\t\t\ttype: \"Feature\",\n\t\t\t\tproperties: {\n\t\t\t\t\tdescription: `<strong>${point.address}</strong><p><Link to=\"/driveway/${point.id}\">\n\t\t\t\t\t\t<p>View More</p>\n\t\t\t\t\t</Link></p>`,\n\t\t\t\t\ticon: \"veterinary-15\",\n\t\t\t\t},\n\t\t\t\tgeometry: {\n\t\t\t\t\ttype: \"Point\",\n\t\t\t\t\tcoordinates: point.lat_long,\n\t\t\t\t},\n\t\t\t}));\n\t\tmap.on(\"load\", function () {\n\t\t\tmap.addSource(\"places\", {\n\t\t\t\ttype: \"geojson\",\n\t\t\t\tdata: {\n\t\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\t\tfeatures: allPoints,\n\t\t\t\t},\n\t\t\t});\n\t\t\tmap.addLayer({\n\t\t\t\tid: \"places\",\n\t\t\t\ttype: \"symbol\",\n\t\t\t\tsource: \"places\",\n\t\t\t\tlayout: {\n\t\t\t\t\t\"icon-image\": \"{icon}\",\n\t\t\t\t\t\"icon-allow-overlap\": true,\n\t\t\t\t},\n\t\t\t});\n\t\t\tmap.on(\"click\", \"places\", function (e) {\n\t\t\t\tvar coordinates = e.features[0].geometry.coordinates.slice();\n\t\t\t\tvar description = e.features[0].properties.description;\n\n\t\t\t\twhile (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n\t\t\t\t\tcoordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n\t\t\t\t}\n\n\t\t\t\tnew mapboxgl.Popup()\n\t\t\t\t\t.setLngLat(coordinates)\n\t\t\t\t\t.setHTML(description)\n\t\t\t\t\t.addTo(map);\n\t\t\t});\n\n\t\t\tmap.on(\"mouseenter\", \"places\", function () {\n\t\t\t\tmap.getCanvas().style.cursor = \"pointer\";\n\t\t\t});\n\n\t\t\tmap.on(\"mouseleave\", \"places\", function () {\n\t\t\t\tmap.getCanvas().style.cursor = \"\";\n\t\t\t});\n\t\t});\n\t};\n\n\tconst submitNewLocation = (e) => {\n\t\te.preventDefault();\n\t\tgetLocation();\n\t\tsetSearch(\"\");\n\t};\n\n\tuseEffect(() => {\n\t\tnewLocation();\n\t}, [dbDrivewayList]);\n\n\tuseEffect(() => {\n\t\tgetDrivewayData();\n\t}, [searchCoordinates]);\n\tuseEffect(() => {\n\t\tnewLocation();\n\t}, [dbDrivewayList]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"driveway-results-div\">\n\t\t\t\t<form onSubmit={submitNewLocation} className=\"results-search-bar\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"landing-search-input\"\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder=\"Going somewhere else?\"\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<button id=\"main-search-button\">Search</button>\n\t\t\t\t</form>\n\t\t\t\t<h1>Search Results</h1>\n\t\t\t\t<div className=\"results-and-map\">\n\t\t\t\t\t<div className=\"search-results\">\n\t\t\t\t\t\t{dbDrivewayList.length > 1 ? (\n\t\t\t\t\t\t\tdbDrivewayList.map((driveway) => (\n\t\t\t\t\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"driveway-pic\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={emptyDriveway}\n\t\t\t\t\t\t\t\t\t\t\talt=\"driveway\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<h2>{driveway.address}</h2>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t<p>${driveway.rate} / hour</p>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/driveway/${driveway.id}`}>More</Link>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>No results!</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"map\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}