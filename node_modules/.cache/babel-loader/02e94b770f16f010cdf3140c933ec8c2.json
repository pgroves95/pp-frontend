{"ast":null,"code":"var _jsxFileName = \"/home/groves/code/parking-pals/client/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../css/Login.css\";\nimport dog from \"../assets/images/dog.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserData } from \"../actions/profile-actions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { dbReservations } from \"../actions/db-reservations-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"30%\",\n    marginTop: \"30px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  const loginStatus = useSelector(state => state.loginStatus);\n  const profileData = useSelector(state => state.profileData);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const sendForm = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3001/api/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message) {\n        setLoginMessage(data.message);\n        setPassword(\"\");\n        history.push(\"/login\");\n      } else {\n        if (loginStatus && loginStatus.length > 1) {\n          getUserData(dispatch, data);\n          getReservationsData();\n          history.goBack();\n        } else {\n          getUserData(dispatch, data);\n          getReservationsData();\n          history.push(\"/\");\n        }\n      }\n    });\n    return false;\n  };\n\n  const getReservationsData = async () => {\n    const response = await fetch(`http://localhost:3001/api/reservations/${profileData.id}`, {\n      method: \"GET\"\n    });\n    const parsedData = await response.json();\n    dbReservations(dispatch, parsedData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login-section\",\n      children: [loginStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"Please login to make a reservation      \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), loginMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login-toast\",\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"Unable to login. Please check your credentials and try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: e => sendForm(e),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-header\",\n          children: \"Log In to Find Parking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"dog-icon\",\n          src: dog,\n          alt: \"dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input-1\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input-2\",\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login-link\",\n          to: \"/RegisterUser\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not signed up? Click here to make an account!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"fkmyfTEh7SzKL2YoXXgQ/vaMxfo=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch, useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/groves/code/parking-pals/client/src/components/Login.jsx"],"names":["React","useState","useEffect","Link","useHistory","dog","useDispatch","useSelector","getUserData","makeStyles","Alert","dbReservations","useStyles","theme","root","width","marginTop","spacing","Login","email","setEmail","password","setPassword","loginMessage","setLoginMessage","loginStatus","state","profileData","history","dispatch","classes","sendForm","e","preventDefault","fetch","method","body","JSON","stringify","credentials","headers","then","res","json","data","message","push","length","getReservationsData","goBack","response","id","parsedData","target","value"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../css/Login.css\";\nimport dog from \"../assets/images/dog.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserData } from \"../actions/profile-actions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { dbReservations } from \"../actions/db-reservations-actions\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"30%\",\n\t\tmarginTop: \"30px\",\n\t\t\"& > * + *\": {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n}));\n\nexport default function Login() {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [loginMessage, setLoginMessage] = useState(\"\");\n\tconst loginStatus = useSelector((state) => state.loginStatus)\n\tconst profileData = useSelector((state) => state.profileData);\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\n\tconst sendForm = (e) => {\n\t\te.preventDefault();\n\t\tfetch(\"http://localhost:3001/api/users/login\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({ email, password }),\n\t\t\tcredentials: \"include\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.message) {\n\t\t\t\t\tsetLoginMessage(data.message);\n\t\t\t\t\tsetPassword(\"\");\n\t\t\t\t\thistory.push(\"/login\");\n\t\t\t\t} else {\n\t\t\t\t\tif (loginStatus && loginStatus.length > 1) {\n\t\t\t\t\tgetUserData(dispatch, data);\n\t\t\t\t\tgetReservationsData();\n\t\t\t\t\thistory.goBack();\n\t\t\t\t\t} else {\n\t\t\t\t\tgetUserData(dispatch, data);\n\t\t\t\t\tgetReservationsData();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}}});\n\t\treturn false;\n\t};\n\n\tconst getReservationsData = async () => {\n\t\tconst response = await fetch(`http://localhost:3001/api/reservations/${profileData.id}`, {\n\t\t\tmethod: \"GET\",\n\t\t});\n\t\tconst parsedData = await response.json();\n\t\tdbReservations(dispatch, parsedData);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div id=\"login-section\">\n\t\t\t{loginStatus ? (\n\t\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t\tPlease login to make a reservation\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t{loginMessage ? (\n\t\t\t\t\t<div id=\"login-toast\" className={classes.root}>\n\t\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t\tUnable to login. Please check your credentials and try again!\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t<br />\n\t\t\t\t<form className=\"login-form\" onSubmit={(e) => sendForm(e)}>\n\t\t\t\t\t<h1 className=\"login-header\">Log In to Find Parking</h1>\n\t\t\t\t\t<img id=\"dog-icon\" src={dog} alt=\"dog\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"login-input-1\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"login-input-2\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"login-button\" type=\"submit\">\n\t\t\t\t\t\tLog In\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link className=\"login-link\" to=\"/RegisterUser\">\n\t\t\t\t\t\t<p>Not signed up? Click here to make an account!</p>\n\t\t\t\t\t</Link>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}